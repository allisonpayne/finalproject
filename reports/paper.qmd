---
title: "Manuscript"
author: "Salma Abdel-Raheem, Emily Nazario, Allison Payne"
format: html
editor: visual
---

## Paper Description

## Data Summary

## Analysis Summary

Our data analysis comprised of regenerating the Figure 2 of the original manuscript. The data provided by the authors was well documented and relatively straightforward to work with and required minimal manipulation to fully reproduce both panels of our figure.

To visualize the global, Islay, and Wexford population counts for Fig. 2A, we reformatted the `GWfG Pop counts.csv` using the `pivot_longer()` command. This allowed us to consolidate data such that instead of each population having an associated data column populated with population counts, we made one `site` and one `count` column that together describe the site and its associated population count. This manipulation allowed us to specify `site` as a value on to which we could map different `geom_line()` values and visualize the three different population counts.

```{r}
library(tidyverse)
pop_count <- read.csv(here("data/OG/GWfG Pop counts.csv"))
pop_count_long <- pivot_longer(data = pop_count, 
                          cols = c("Population.estimate", "Wexford", "Islay"), 
                          names_to = "site", values_to = "count") %>% 
  select(-c("Missing.data", "X")) #unnecessary columns

head(pop_count)
head(pop_count_long)
```

We indexed the `pop_count` dataframe to find the year at which the population count was highest. We saved this value to its own vector called `max_mp` so that we could recreate the dashed line observed in Fig. 2 which represents the metapopulation peak.

```{r}
max_mp <- pop_count$spring[which.max(pop_count$Population.estimate)]
```

To visualize the proportion of young geese observed and calculate the 3-year running average in the Islay and Wexford sub-populations for Fig. 2B, we used the `zoo` package and `roll_mean ()` function to calculate the 3-year running average. The paper did not specify how the running average was calculated, but we assumed a default of `center` alignment in which the mean is calculated by using one value to the left and another to the right of the central value.

```{r}
young_count <- young_count %>%
  group_by(Ringing.location) %>%
  mutate(roll_mean = rollmean(Perc_young, k = 3, align = "center", fill = NA))
```

## Results

## Discussion
